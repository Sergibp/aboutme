{"ast":null,"code":"var _jsxFileName = \"/Users/iClon/Desktop/sergio/dev-portfolio/src/components/ThemeToggler.jsx\";\nimport React from 'react';\nimport DarkModeToggle from 'react-dark-mode-toggle';\nimport PropTypes from 'prop-types';\nimport AppContext from '../AppContext';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction ThemeToggler(props) {\n  const {\n    onClick\n  } = props;\n  const handleOnChange = darkMode => {\n    darkMode.toggle();\n    onClick();\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(AppContext.Consumer, {\n      children: values => /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          marginBottom: 8\n        },\n        children: /*#__PURE__*/_jsxDEV(DarkModeToggle, {\n          onChange: () => handleOnChange(values.darkMode),\n          checked: values.darkMode.value,\n          size: 50\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 18,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n}\n_c = ThemeToggler;\nThemeToggler.propTypes = {\n  onClick: PropTypes.func\n};\nThemeToggler.defaultProps = {\n  onClick: () => {}\n};\nexport default ThemeToggler;\nvar _c;\n$RefreshReg$(_c, \"ThemeToggler\");","map":{"version":3,"names":["React","DarkModeToggle","PropTypes","AppContext","jsxDEV","_jsxDEV","Fragment","_Fragment","ThemeToggler","props","onClick","handleOnChange","darkMode","toggle","children","Consumer","values","style","marginBottom","onChange","checked","value","size","fileName","_jsxFileName","lineNumber","columnNumber","_c","propTypes","func","defaultProps","$RefreshReg$"],"sources":["/Users/iClon/Desktop/sergio/dev-portfolio/src/components/ThemeToggler.jsx"],"sourcesContent":["import React from 'react';\nimport DarkModeToggle from 'react-dark-mode-toggle';\nimport PropTypes from 'prop-types';\nimport AppContext from '../AppContext';\n\nfunction ThemeToggler(props) {\n  const { onClick } = props;\n  const handleOnChange = (darkMode) => {\n    darkMode.toggle();\n    onClick();\n  };\n\n  return (\n    <>\n      <AppContext.Consumer>\n        {(values) => (\n          <div style={{ marginBottom: 8 }}>\n            <DarkModeToggle\n              onChange={() => handleOnChange(values.darkMode)}\n              checked={values.darkMode.value}\n              size={50}\n            />\n          </div>\n        )}\n      </AppContext.Consumer>\n    </>\n  );\n}\n\nThemeToggler.propTypes = {\n  onClick: PropTypes.func,\n};\nThemeToggler.defaultProps = {\n  onClick: () => {},\n};\n\nexport default ThemeToggler;\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,cAAc,MAAM,wBAAwB;AACnD,OAAOC,SAAS,MAAM,YAAY;AAClC,OAAOC,UAAU,MAAM,eAAe;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAEvC,SAASC,YAAYA,CAACC,KAAK,EAAE;EAC3B,MAAM;IAAEC;EAAQ,CAAC,GAAGD,KAAK;EACzB,MAAME,cAAc,GAAIC,QAAQ,IAAK;IACnCA,QAAQ,CAACC,MAAM,CAAC,CAAC;IACjBH,OAAO,CAAC,CAAC;EACX,CAAC;EAED,oBACEL,OAAA,CAAAE,SAAA;IAAAO,QAAA,eACET,OAAA,CAACF,UAAU,CAACY,QAAQ;MAAAD,QAAA,EAChBE,MAAM,iBACNX,OAAA;QAAKY,KAAK,EAAE;UAAEC,YAAY,EAAE;QAAE,CAAE;QAAAJ,QAAA,eAC9BT,OAAA,CAACJ,cAAc;UACbkB,QAAQ,EAAEA,CAAA,KAAMR,cAAc,CAACK,MAAM,CAACJ,QAAQ,CAAE;UAChDQ,OAAO,EAAEJ,MAAM,CAACJ,QAAQ,CAACS,KAAM;UAC/BC,IAAI,EAAE;QAAG;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACV;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACC;IACN;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACkB;EAAC,gBACtB,CAAC;AAEP;AAACC,EAAA,GAtBQnB,YAAY;AAwBrBA,YAAY,CAACoB,SAAS,GAAG;EACvBlB,OAAO,EAAER,SAAS,CAAC2B;AACrB,CAAC;AACDrB,YAAY,CAACsB,YAAY,GAAG;EAC1BpB,OAAO,EAAEA,CAAA,KAAM,CAAC;AAClB,CAAC;AAED,eAAeF,YAAY;AAAC,IAAAmB,EAAA;AAAAI,YAAA,CAAAJ,EAAA"},"metadata":{},"sourceType":"module"}