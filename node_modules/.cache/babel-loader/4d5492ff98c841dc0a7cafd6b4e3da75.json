{"ast":null,"code":"/**\n * @typedef {import('mdast').Link} Link\n * @typedef {import('hast').Properties} Properties\n * @typedef {import('../index.js').Handler} Handler\n */\n\nimport normalize from 'mdurl/encode.js';\nimport { all } from '../traverse.js';\n\n/**\n * @type {Handler}\n * @param {Link} node\n */\nexport function link(h, node) {\n  /** @type {Properties} */\n  const props = {\n    href: normalize(node.url)\n  };\n  if (node.title !== null && node.title !== undefined) {\n    props.title = node.title;\n  }\n  return h(node, 'a', props, all(h, node));\n}","map":{"version":3,"names":["normalize","all","link","h","node","props","href","url","title","undefined"],"sources":["/Users/iClon/Documents/GitHub/aboutme/node_modules/mdast-util-to-hast/lib/handlers/link.js"],"sourcesContent":["/**\n * @typedef {import('mdast').Link} Link\n * @typedef {import('hast').Properties} Properties\n * @typedef {import('../index.js').Handler} Handler\n */\n\nimport normalize from 'mdurl/encode.js'\nimport {all} from '../traverse.js'\n\n/**\n * @type {Handler}\n * @param {Link} node\n */\nexport function link(h, node) {\n  /** @type {Properties} */\n  const props = {href: normalize(node.url)}\n\n  if (node.title !== null && node.title !== undefined) {\n    props.title = node.title\n  }\n\n  return h(node, 'a', props, all(h, node))\n}\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;;AAEA,OAAOA,SAAS,MAAM,iBAAiB;AACvC,SAAQC,GAAG,QAAO,gBAAgB;;AAElC;AACA;AACA;AACA;AACA,OAAO,SAASC,IAAIA,CAACC,CAAC,EAAEC,IAAI,EAAE;EAC5B;EACA,MAAMC,KAAK,GAAG;IAACC,IAAI,EAAEN,SAAS,CAACI,IAAI,CAACG,GAAG;EAAC,CAAC;EAEzC,IAAIH,IAAI,CAACI,KAAK,KAAK,IAAI,IAAIJ,IAAI,CAACI,KAAK,KAAKC,SAAS,EAAE;IACnDJ,KAAK,CAACG,KAAK,GAAGJ,IAAI,CAACI,KAAK;EAC1B;EAEA,OAAOL,CAAC,CAACC,IAAI,EAAE,GAAG,EAAEC,KAAK,EAAEJ,GAAG,CAACE,CAAC,EAAEC,IAAI,CAAC,CAAC;AAC1C"},"metadata":{},"sourceType":"module"}