{"ast":null,"code":"import React,{useContext}from'react';import{Button,Card,Badge,Col}from'react-bootstrap';import{ThemeContext}from'styled-components';import ReactMarkdown from'react-markdown';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";const styles={badgeStyle:{paddingLeft:10,paddingRight:10,paddingTop:5,paddingBottom:5,margin:5},cardStyle:{borderRadius:10},cardTitleStyle:{fontSize:24,fontWeight:700},cardTextStyle:{textAlign:'left'},linkStyle:{textDecoration:'none',padding:10},buttonStyle:{margin:5}};const ProjectCard=props=>{var _project$links;const theme=useContext(ThemeContext);const parseBodyText=text=>/*#__PURE__*/_jsx(ReactMarkdown,{children:text});const{project}=props;return/*#__PURE__*/_jsx(Col,{children:/*#__PURE__*/_jsxs(Card,{style:{...styles.cardStyle,backgroundColor:theme.cardBackground,borderColor:theme.cardBorderColor},text:theme.bsSecondaryVariant,children:[/*#__PURE__*/_jsx(Card.Img,{variant:\"top\",src:project===null||project===void 0?void 0:project.image}),/*#__PURE__*/_jsxs(Card.Body,{children:[/*#__PURE__*/_jsx(Card.Title,{style:styles.cardTitleStyle,children:project.title}),/*#__PURE__*/_jsx(Card.Text,{style:styles.cardTextStyle,children:parseBodyText(project.bodyText)})]}),/*#__PURE__*/_jsx(Card.Body,{children:project===null||project===void 0?void 0:(_project$links=project.links)===null||_project$links===void 0?void 0:_project$links.map(link=>/*#__PURE__*/_jsx(Button,{style:styles.buttonStyle,variant:'outline-'+theme.bsSecondaryVariant,onClick:()=>window.open(link.href,'_blank'),children:link.text},link.href))}),project.tags&&/*#__PURE__*/_jsx(Card.Footer,{style:{backgroundColor:theme.cardFooterBackground},children:project.tags.map(tag=>/*#__PURE__*/_jsx(Badge,{pill:true,bg:theme.bsSecondaryVariant,text:theme.bsPrimaryVariant,style:styles.badgeStyle,children:tag},tag))})]})});};export default ProjectCard;","map":{"version":3,"names":["React","useContext","Button","Card","Badge","Col","ThemeContext","ReactMarkdown","jsx","_jsx","jsxs","_jsxs","styles","badgeStyle","paddingLeft","paddingRight","paddingTop","paddingBottom","margin","cardStyle","borderRadius","cardTitleStyle","fontSize","fontWeight","cardTextStyle","textAlign","linkStyle","textDecoration","padding","buttonStyle","ProjectCard","props","_project$links","theme","parseBodyText","text","children","project","style","backgroundColor","cardBackground","borderColor","cardBorderColor","bsSecondaryVariant","Img","variant","src","image","Body","Title","title","Text","bodyText","links","map","link","onClick","window","open","href","tags","Footer","cardFooterBackground","tag","pill","bg","bsPrimaryVariant"],"sources":["/Users/iClon/Documents/GitHub/aboutme/src/components/projects/ProjectCard.jsx"],"sourcesContent":["import React, { useContext } from 'react';\nimport {\n  Button, Card, Badge, Col,\n} from 'react-bootstrap';\nimport PropTypes from 'prop-types';\nimport { ThemeContext } from 'styled-components';\nimport ReactMarkdown from 'react-markdown';\n\nconst styles = {\n  badgeStyle: {\n    paddingLeft: 10,\n    paddingRight: 10,\n    paddingTop: 5,\n    paddingBottom: 5,\n    margin: 5,\n  },\n  cardStyle: {\n    borderRadius: 10,\n  },\n  cardTitleStyle: {\n    fontSize: 24,\n    fontWeight: 700,\n  },\n  cardTextStyle: {\n    textAlign: 'left',\n  },\n  linkStyle: {\n    textDecoration: 'none',\n    padding: 10,\n  },\n  buttonStyle: {\n    margin: 5,\n  },\n};\n\nconst ProjectCard = (props) => {\n  const theme = useContext(ThemeContext);\n  const parseBodyText = (text) => <ReactMarkdown children={text} />;\n\n  const { project } = props;\n\n  return (\n    <Col>\n      <Card\n        style={{\n          ...styles.cardStyle,\n          backgroundColor: theme.cardBackground,\n          borderColor: theme.cardBorderColor,\n        }}\n        text={theme.bsSecondaryVariant}\n      >\n        <Card.Img variant=\"top\" src={project?.image} />\n        <Card.Body>\n          <Card.Title style={styles.cardTitleStyle}>{project.title}</Card.Title>\n          <Card.Text style={styles.cardTextStyle}>\n            {parseBodyText(project.bodyText)}\n          </Card.Text>\n        </Card.Body>\n\n        <Card.Body>\n          {project?.links?.map((link) => (\n            <Button\n              key={link.href}\n              style={styles.buttonStyle}\n              variant={'outline-' + theme.bsSecondaryVariant}\n              onClick={() => window.open(link.href, '_blank')}\n            >\n              {link.text}\n            </Button>\n          ))}\n        </Card.Body>\n        {project.tags && (\n          <Card.Footer style={{ backgroundColor: theme.cardFooterBackground }}>\n            {project.tags.map((tag) => (\n              <Badge\n                key={tag}\n                pill\n                bg={theme.bsSecondaryVariant}\n                text={theme.bsPrimaryVariant}\n                style={styles.badgeStyle}\n              >\n                {tag}\n              </Badge>\n            ))}\n          </Card.Footer>\n        )}\n      </Card>\n    </Col>\n  );\n};\n\nProjectCard.propTypes = {\n  project: PropTypes.shape({\n    title: PropTypes.string.isRequired,\n    bodyText: PropTypes.string.isRequired,\n    image: PropTypes.string,\n    links: PropTypes.arrayOf(PropTypes.shape({\n      text: PropTypes.string.isRequired,\n      href: PropTypes.string.isRequired,\n    })),\n    tags: PropTypes.arrayOf(PropTypes.string),\n  }).isRequired,\n};\n\nexport default ProjectCard;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}