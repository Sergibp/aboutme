{"ast":null,"code":"/**\n * @typedef {import('mdast').BlockContent} BlockContent\n * @typedef {import('mdast').FootnoteDefinition} FootnoteDefinition\n * @typedef {import('mdast').Link} Link\n * @typedef {import('mdast').ListItem} ListItem\n * @typedef {import('mdast').Paragraph} Paragraph\n * @typedef {import('./index.js').H} H\n */\n\nimport { thematicBreak } from './handlers/thematic-break.js';\nimport { list } from './handlers/list.js';\nimport { wrap } from './wrap.js';\n\n/**\n * @param {H} h\n */\nexport function footer(h) {\n  const footnoteById = h.footnoteById;\n  const footnoteOrder = h.footnoteOrder;\n  let index = -1;\n  /** @type {Array.<ListItem>} */\n  const listItems = [];\n  while (++index < footnoteOrder.length) {\n    const def = footnoteById[footnoteOrder[index].toUpperCase()];\n    if (!def) {\n      continue;\n    }\n    const marker = String(index + 1);\n    const content = [...def.children];\n    /** @type {Link} */\n    const backReference = {\n      type: 'link',\n      url: '#fnref' + marker,\n      data: {\n        hProperties: {\n          className: ['footnote-back'],\n          role: 'doc-backlink'\n        }\n      },\n      children: [{\n        type: 'text',\n        value: '↩'\n      }]\n    };\n    const tail = content[content.length - 1];\n    if (tail && tail.type === 'paragraph') {\n      tail.children.push(backReference);\n    } else {\n      // @ts-expect-error Indeed, link directly added in block content.\n      // Which we do because that way at least the handlers will be called\n      // for the other HTML we’re generating (as markdown).\n      content.push(backReference);\n    }\n    listItems.push({\n      type: 'listItem',\n      data: {\n        hProperties: {\n          id: 'fn' + marker,\n          role: 'doc-endnote'\n        }\n      },\n      children: content,\n      position: def.position\n    });\n  }\n  if (listItems.length === 0) {\n    return null;\n  }\n  return h(null, 'section', {\n    className: ['footnotes'],\n    role: 'doc-endnotes'\n  }, wrap([thematicBreak(h), list(h, {\n    type: 'list',\n    ordered: true,\n    children: listItems\n  })], true));\n}","map":{"version":3,"names":["thematicBreak","list","wrap","footer","h","footnoteById","footnoteOrder","index","listItems","length","def","toUpperCase","marker","String","content","children","backReference","type","url","data","hProperties","className","role","value","tail","push","id","position","ordered"],"sources":["/Users/iClon/Desktop/sergio/dev-portfolio/node_modules/mdast-util-to-hast/lib/footer.js"],"sourcesContent":["/**\n * @typedef {import('mdast').BlockContent} BlockContent\n * @typedef {import('mdast').FootnoteDefinition} FootnoteDefinition\n * @typedef {import('mdast').Link} Link\n * @typedef {import('mdast').ListItem} ListItem\n * @typedef {import('mdast').Paragraph} Paragraph\n * @typedef {import('./index.js').H} H\n */\n\nimport {thematicBreak} from './handlers/thematic-break.js'\nimport {list} from './handlers/list.js'\nimport {wrap} from './wrap.js'\n\n/**\n * @param {H} h\n */\nexport function footer(h) {\n  const footnoteById = h.footnoteById\n  const footnoteOrder = h.footnoteOrder\n  let index = -1\n  /** @type {Array.<ListItem>} */\n  const listItems = []\n\n  while (++index < footnoteOrder.length) {\n    const def = footnoteById[footnoteOrder[index].toUpperCase()]\n\n    if (!def) {\n      continue\n    }\n\n    const marker = String(index + 1)\n    const content = [...def.children]\n    /** @type {Link} */\n    const backReference = {\n      type: 'link',\n      url: '#fnref' + marker,\n      data: {hProperties: {className: ['footnote-back'], role: 'doc-backlink'}},\n      children: [{type: 'text', value: '↩'}]\n    }\n    const tail = content[content.length - 1]\n\n    if (tail && tail.type === 'paragraph') {\n      tail.children.push(backReference)\n    } else {\n      // @ts-expect-error Indeed, link directly added in block content.\n      // Which we do because that way at least the handlers will be called\n      // for the other HTML we’re generating (as markdown).\n      content.push(backReference)\n    }\n\n    listItems.push({\n      type: 'listItem',\n      data: {hProperties: {id: 'fn' + marker, role: 'doc-endnote'}},\n      children: content,\n      position: def.position\n    })\n  }\n\n  if (listItems.length === 0) {\n    return null\n  }\n\n  return h(\n    null,\n    'section',\n    {className: ['footnotes'], role: 'doc-endnotes'},\n    wrap(\n      [\n        thematicBreak(h),\n        list(h, {type: 'list', ordered: true, children: listItems})\n      ],\n      true\n    )\n  )\n}\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,SAAQA,aAAa,QAAO,8BAA8B;AAC1D,SAAQC,IAAI,QAAO,oBAAoB;AACvC,SAAQC,IAAI,QAAO,WAAW;;AAE9B;AACA;AACA;AACA,OAAO,SAASC,MAAMA,CAACC,CAAC,EAAE;EACxB,MAAMC,YAAY,GAAGD,CAAC,CAACC,YAAY;EACnC,MAAMC,aAAa,GAAGF,CAAC,CAACE,aAAa;EACrC,IAAIC,KAAK,GAAG,CAAC,CAAC;EACd;EACA,MAAMC,SAAS,GAAG,EAAE;EAEpB,OAAO,EAAED,KAAK,GAAGD,aAAa,CAACG,MAAM,EAAE;IACrC,MAAMC,GAAG,GAAGL,YAAY,CAACC,aAAa,CAACC,KAAK,CAAC,CAACI,WAAW,CAAC,CAAC,CAAC;IAE5D,IAAI,CAACD,GAAG,EAAE;MACR;IACF;IAEA,MAAME,MAAM,GAAGC,MAAM,CAACN,KAAK,GAAG,CAAC,CAAC;IAChC,MAAMO,OAAO,GAAG,CAAC,GAAGJ,GAAG,CAACK,QAAQ,CAAC;IACjC;IACA,MAAMC,aAAa,GAAG;MACpBC,IAAI,EAAE,MAAM;MACZC,GAAG,EAAE,QAAQ,GAAGN,MAAM;MACtBO,IAAI,EAAE;QAACC,WAAW,EAAE;UAACC,SAAS,EAAE,CAAC,eAAe,CAAC;UAAEC,IAAI,EAAE;QAAc;MAAC,CAAC;MACzEP,QAAQ,EAAE,CAAC;QAACE,IAAI,EAAE,MAAM;QAAEM,KAAK,EAAE;MAAG,CAAC;IACvC,CAAC;IACD,MAAMC,IAAI,GAAGV,OAAO,CAACA,OAAO,CAACL,MAAM,GAAG,CAAC,CAAC;IAExC,IAAIe,IAAI,IAAIA,IAAI,CAACP,IAAI,KAAK,WAAW,EAAE;MACrCO,IAAI,CAACT,QAAQ,CAACU,IAAI,CAACT,aAAa,CAAC;IACnC,CAAC,MAAM;MACL;MACA;MACA;MACAF,OAAO,CAACW,IAAI,CAACT,aAAa,CAAC;IAC7B;IAEAR,SAAS,CAACiB,IAAI,CAAC;MACbR,IAAI,EAAE,UAAU;MAChBE,IAAI,EAAE;QAACC,WAAW,EAAE;UAACM,EAAE,EAAE,IAAI,GAAGd,MAAM;UAAEU,IAAI,EAAE;QAAa;MAAC,CAAC;MAC7DP,QAAQ,EAAED,OAAO;MACjBa,QAAQ,EAAEjB,GAAG,CAACiB;IAChB,CAAC,CAAC;EACJ;EAEA,IAAInB,SAAS,CAACC,MAAM,KAAK,CAAC,EAAE;IAC1B,OAAO,IAAI;EACb;EAEA,OAAOL,CAAC,CACN,IAAI,EACJ,SAAS,EACT;IAACiB,SAAS,EAAE,CAAC,WAAW,CAAC;IAAEC,IAAI,EAAE;EAAc,CAAC,EAChDpB,IAAI,CACF,CACEF,aAAa,CAACI,CAAC,CAAC,EAChBH,IAAI,CAACG,CAAC,EAAE;IAACa,IAAI,EAAE,MAAM;IAAEW,OAAO,EAAE,IAAI;IAAEb,QAAQ,EAAEP;EAAS,CAAC,CAAC,CAC5D,EACD,IACF,CACF,CAAC;AACH"},"metadata":{},"sourceType":"module"}