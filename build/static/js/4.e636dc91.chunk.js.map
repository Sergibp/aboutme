{"version":3,"sources":["components/Header.jsx","components/Education.jsx"],"names":["Header","props","title","_jsx","className","children","Education","theme","useContext","ThemeContext","header","data","setData","useState","width","setWidth","mode","setMode","useEffect","_window","_window2","_window3","_window4","_window5","_window6","fetch","endpoints","education","method","then","res","json","catch","err","window","innerWidth","_jsxs","_Fragment","Fade","style","Container","Chrono","hideControls","allowDynamicUpdate","useReadMore","items","cardHeight","primary","accentColor","secondary","cardBgColor","chronoTheme","cardForeColor","titleColor","map","icon","src","alt","FallbackSpinner"],"mappings":"6IAAA,6BAaeA,UATf,SAAgBC,GACd,MAAM,MAAEC,GAAUD,EAClB,OAAOE,cAAA,OAAKC,UAAU,SAAQC,SAAEH,GAClC,C,kCCPA,qGAqFeI,UA1Ef,SAAmBL,GACjB,MAAMM,EAAQC,qBAAWC,MACnB,OAAEC,GAAWT,GACZU,EAAMC,GAAWC,mBAAS,OAC1BC,EAAOC,GAAYF,mBAAS,SAC5BG,EAAMC,GAAWJ,mBAAS,wBAyBjC,OAvBAK,qBAAU,KAAO,IAADC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EACdC,MAAMC,IAAUC,UAAW,CACzBC,OAAQ,QAEPC,MAAMC,GAAQA,EAAIC,SAClBF,MAAMC,GAAQlB,EAAQkB,KACtBE,OAAOC,GAAQA,KAER,QAANd,EAAAe,cAAM,IAAAf,OAAA,EAANA,EAAQgB,YAAa,KACvBlB,EAAQ,aAGA,QAANG,EAAAc,cAAM,IAAAd,OAAA,EAANA,EAAQe,YAAa,MAER,QAANd,EAAAa,cAAM,IAAAb,OAAA,EAANA,EAAQc,aAAc,MAAa,QAANb,EAAAY,cAAM,IAAAZ,OAAA,EAANA,EAAQa,YAAa,IAD3DpB,EAAS,SAGM,QAANQ,EAAAW,cAAM,IAAAX,OAAA,EAANA,EAAQY,aAAc,MAAa,QAANX,EAAAU,cAAM,IAAAV,OAAA,EAANA,EAAQW,YAAa,KAC3DpB,EAAS,QAETA,EAAS,OACX,GACC,IAGDqB,eAAAC,WAAA,CAAAhC,SAAA,CACEF,cAACH,UAAM,CAACE,MAAOQ,IACdC,EACCR,cAACmC,IAAI,CAAAjC,SACHF,cAAA,OAAKoC,MAAO,CAAEzB,SAASV,UAAU,4BAA2BC,SAC1DF,cAACqC,IAAS,CAAAnC,SACRF,cAACsC,IAAM,CACLC,cAAY,EACZC,oBAAkB,EAClBC,aAAa,EACbC,MAAOlC,EAAKgB,UACZmB,WAAY,IACZ9B,KAAMA,EACNT,MAAO,CACLwC,QAASxC,EAAMyC,YACfC,UAAW1C,EAAMyC,YACjBE,YAAa3C,EAAM4C,YAAYD,YAC/BE,cAAe7C,EAAM4C,YAAYC,cACjCC,WAAY9C,EAAM4C,YAAYE,YAC9BhD,SAEFF,cAAA,OAAKC,UAAU,eAAcC,SAC1BM,EAAKgB,UAAU2B,KAAK3B,GAAeA,EAAU4B,KAC5CpD,cAAA,OAEEqD,IAAK7B,EAAU4B,KAAKC,IACpBC,IAAK9B,EAAU4B,KAAKE,KAFf9B,EAAU4B,KAAKC,KAIpB,iBAMZrD,cAACuD,UAAe,MAG1B,C","file":"static/js/4.e636dc91.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport '../App.css';\n\nfunction Header(props) {\n  const { title } = props;\n  return <div className=\"header\">{title}</div>;\n}\n\nHeader.propTypes = {\n  title: PropTypes.string.isRequired,\n};\n\nexport default Header;\n","import React, { useEffect, useState, useContext } from 'react';\nimport { Chrono } from 'react-chrono';\nimport { Container } from 'react-bootstrap';\nimport PropTypes from 'prop-types';\nimport Fade from 'react-reveal';\nimport { ThemeContext } from 'styled-components';\nimport endpoints from '../constants/endpoints';\nimport Header from './Header';\nimport FallbackSpinner from './FallbackSpinner';\nimport '../css/education.css';\n\nfunction Education(props) {\n  const theme = useContext(ThemeContext);\n  const { header } = props;\n  const [data, setData] = useState(null);\n  const [width, setWidth] = useState('50vw');\n  const [mode, setMode] = useState('VERTICAL_ALTERNATING');\n\n  useEffect(() => {\n    fetch(endpoints.education, {\n      method: 'GET',\n    })\n      .then((res) => res.json())\n      .then((res) => setData(res))\n      .catch((err) => err);\n\n    if (window?.innerWidth < 576) {\n      setMode('VERTICAL');\n    }\n\n    if (window?.innerWidth < 576) {\n      setWidth('90vw');\n    } else if (window?.innerWidth >= 576 && window?.innerWidth < 768) {\n      setWidth('90vw');\n    } else if (window?.innerWidth >= 768 && window?.innerWidth < 1024) {\n      setWidth('75vw');\n    } else {\n      setWidth('50vw');\n    }\n  }, []);\n\n  return (\n    <>\n      <Header title={header} />\n      {data ? (\n        <Fade>\n          <div style={{ width }} className=\"section-content-container\">\n            <Container>\n              <Chrono\n                hideControls\n                allowDynamicUpdate\n                useReadMore={false}\n                items={data.education}\n                cardHeight={250}\n                mode={mode}\n                theme={{\n                  primary: theme.accentColor,\n                  secondary: theme.accentColor,\n                  cardBgColor: theme.chronoTheme.cardBgColor,\n                  cardForeColor: theme.chronoTheme.cardForeColor,\n                  titleColor: theme.chronoTheme.titleColor,\n                }}\n              >\n                <div className=\"chrono-icons\">\n                  {data.education.map((education) => (education.icon ? (\n                    <img\n                      key={education.icon.src}\n                      src={education.icon.src}\n                      alt={education.icon.alt}\n                    />\n                  ) : null))}\n                </div>\n              </Chrono>\n            </Container>\n          </div>\n        </Fade>\n      ) : <FallbackSpinner /> }\n    </>\n  );\n}\n\nEducation.propTypes = {\n  header: PropTypes.string.isRequired,\n};\n\nexport default Education;\n"],"sourceRoot":""}